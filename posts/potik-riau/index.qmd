---
title: "Pembinaan Agen Statistik"
author: "Andriansyah Muqiit Wardoyo Saputra"
date: "24 Juni 2025"
format: 
  html:
    toc: true
    toc_float: true
    number-sections: true
    tbl-cap-location: top
    theme: cosmo
    df-print: paged
categories: [code, analysis]
image: "image.jpg"
---

# Pendahuluan

Halaman ini adalah tutorial dalam bentuk markdown sebagai penunjang kegiatan Pembinaan Agen Pojok Statistik Universitas Islam Riau dan Universitas Riau.

Berikut adalah presentasi dari saya:

::: {style="position: relative; width: 100%; height: 0; padding-top: 56.25%;
 padding-bottom: 0; box-shadow: 0 2px 8px 0 rgba(63,69,81,0.16); margin-top: 1.6em; margin-bottom: 0.9em; overflow: hidden;
 border-radius: 8px; will-change: transform;"}
<iframe loading="lazy" style="position: absolute; width: 100%; height: 100%; top: 0; left: 0; border: none; padding: 0;margin: 0;"
    src="https://www.canva.com/design/DAGrUBhq22E/mGIgNASsYtSLToQ0y4_8kA/view?embed" allowfullscreen="allowfullscreen" allow="fullscreen"> </iframe>
:::

Topik yang kita angkat pada tutor kali ini adalah Pengaruh *Work Life Balance*, *Employee Engagement*, *Competency*, dan *Job Characteristic* terhadap *Turnover Intention* pada Karyawan Generasi Milenial Perusahaan XYZ. Rincian variabel konstruk dapat dilihat pada @tbl-konstruk berikut.

```{r}
#| include: false
library(knitr)
```

```{r}
#| label: tbl-konstruk
#| echo: false
#| tbl-cap: "Rincian variabel konstruk dan item pertanyaan."

konstruk_var <- read.csv(file = "konstruk-var.csv")
kable(konstruk_var, align = "l")

```

## Install dan load package

Package yang akan digunakan dalam tutor kali ini adalah SEMinR, jalankan kode `install.packages("seminr")` pada console untuk memasangnya pada Rstudio.

```{r}
#| label: load-packages
#| include: true
#| warning: false

# Load package
library(seminr)
```

## Load dan menampilkan data

Pertama kali, load dataset yang akan kita gunakan untuk memodelkan SEM-PLS menggunakan fungsi `read.csv( ... )`. [ðŸ“¥ Unduh Dataset dataset.csv](dataset.csv)

```{r}
#| echo: true
data <- read.csv("dataset.csv", header = TRUE, sep = ',')
data <- data[,-1] # menghapus kolom ID
```

Dataset ini terdiri dari **`r nrow(data)` observasi** dan **`r ncol(data)` variabel**.

```{r}
head(data)
```

::: callout-warning
## DISCLAIMER - Data ini merupakan Data Dummy yang di-generate menggunakan bantuan ChatGPT dan hanya bertujuan untuk kepentingan tutorial.
:::

# Pembangunan model

## Membuat model measurement

Fungsi `contructs()` digunakan untuk mendefinisikan semua konstruk ke dalam model measurement. Konstruk yang dapat dibuat antara lain:

-   `composite()` : untuk konstruk individu

-   `interaction_term()` : untuk konstruk yang saling berinteraksi

Lalu, untuk `composite()` yang terdiri dari beberapa variabel menggunakan `multi_items()`, sedangkan untuk yang hanya terdiri dari 1 variabel menggunakan `single_item()`.

Sebagai contoh, untuk konstruk WLB disusun atas variabel WLB1 sampai WLB6. Maka, model measurement-nya dapat didefinisikan sebagai berikut.

```{r}
# Definisikan konstruk (measurement model)
mm <- constructs(
  composite("WLB",  multi_items("WLB", 1:6)),
  composite("EE",   multi_items("EE", 1:6)),
  composite("COMP", multi_items("COMP", 1:6)),
  composite("JC",   multi_items("JC", 1:6)),
  composite("TI",   multi_items("TI", 1:6))
)
```

## Membuat model struktural

```{r}
# Definisikan hubungan antar konstruk (structural model)
sm <- relationships(
  paths(from = c("WLB", "EE", "COMP", "JC"), to = "TI")
)
```

## Estimasi model

```{r}
# Estimasi model dengan metode Partial Least Square (PLS)
pls_model <- estimate_pls(data = data, 
                          measurement_model = mm, 
                          structural_model = sm,
                          inner_weights = path_weighting)
```

```{r}
#| label: fig-plot
#| fig-cap: "Grafik hasil pemodelan"
#| echo: true
#| message: false
#| warning: false
#| error: false

plot(pls_model)
```

## Interpretasi hasil estimasi

Setelah model diestimasi, hasil ringkasannya dapat di-generate dengan menjalankan fungsi `summary()` lalu kita simpan hasil estimasi model ke dalam `summary_model`.

```{r}
summary_pls_model <- summary(pls_model)
```

Menampilkan koefisien jalur dan nilai Adjusted R^2^ dengan menjalankan kode berikut.

```{r}
summary_pls_model$paths
```

```{r}
# Validitas
#summary_pls_model$validity
```

# Evaluasi model

## Evaluasi model measurement

### Indicator reliability

```{r}
summary_pls_model$loadings
```

Reliabilitas indikator dapat diperoleh dari kuadrat nilai loadings.

```{r}
summary_pls_model$loadings^2
```

### Internal consistency reliability

Cronbachâ€™s alpha \< rhoA \< rhoC

```{r}
summary_pls_model$reliability
```

### Convergent validity

Nilai AVE minimal 0.5

```{r}
summary_pls_model$reliability
```

### Discriminant validity

Untuk memastikan bahwa setiap konstruk dari variabel laten berbeda dengan variabel lainnya. Hal ini ditandai dengan nilai loadings pada dari setiap indikator dari suatu variabel laten memiliki nilai yang paling besar dibandingkan nilai loadings lain pada variabel laten lainnya. Hasilnya adalah sebagai berikut.

```{r}
summary_pls_model$validity$cross_loadings
```

Atau lebih mudahnya dapat melihat nilai kriteria Fornell-Larcker (Fornel & Larcker, 1981) berikut.

```{r}
summary_pls_model$validity$fl_criteria
```

## Evaluasi model struktural

### Pengujian hipotesis (bootstrap)

```{r}
boot_pls_model <- bootstrap_model(seminr_model = pls_model,
  nboot = 1000,
  cores = NULL,
  seed = 123)
```

```{r}
sum_boot_pls_model <- summary(boot_pls_model)
```

```{r}
sum_boot_pls_model$bootstrapped_paths
```

```{r}
sum_boot_pls_model$bootstrapped_loadings
```
